import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
		classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
	}
}

if(project.hasProperty('ossrhUser') && project.hasProperty("release")) {
	apply plugin: "io.codearte.nexus-staging"

	nexusStaging {
		packageGroup = 'org.mini2Dx'
		username = ossrhUser
		password = ossrhPassword
	}
}

subprojects {
	apply plugin: "java"
	apply plugin: "signing"
	apply plugin: "maven"
	
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://mini2dx.org/maven/content/repositories/thirdparty" }
	}
	
	group = 'org.mini2Dx'
	version = '4.0.1-SNAPSHOT'
	
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
	
	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
	
	artifacts {
		archives javadocJar, sourcesJar
	}
	
	// Maven Central publication
	if(project.hasProperty('ossrhUser')) {
		signing {
			sign configurations.archives
		}
		
		uploadArchives {
			repositories {
				mavenDeployer {
					// POM signature
					beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
					// Target repository
					repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
						authentication(userName: ossrhUser, password: ossrhPassword)
					}
					pom.project {
						name project.name
						description project.description
						packaging 'jar'
						url 'https://github.com/mini2Dx/tilepacker'
	
						scm {
							connection 'scm:git:https://github.com/mini2Dx/tilepacker.git'
							developerConnection 'scm:git:git@github.com:mini2Dx/tilepacker.git'
							url 'https://github.com/mini2Dx/tilepacker.git'
						}
	
						licenses {
							license {
								name 'The BSD 3-Clause License'
								url 'https://opensource.org/licenses/BSD-3-Clause'
								distribution 'repo'
							}
						}
	
						developers {
							developer {
								id = 'tomcashman'
								name = 'Thomas Cashman'
								email = 'thomascashman404@gmail.com'
							}
						}
					}
				}
			}
		}
	}
}

project(":" + rootProject.name + "-core") {
	apply plugin: 'application'
	apply plugin: 'com.github.johnrengelman.shadow'
	
	mainClassName = "org.tilepacker.core.TilePacker"
	
	dependencies {
		compile 'org.simpleframework:simple-xml:2.7.1'
		compile fileTree(dir: 'lib', include: ['*.jar'])
	
		testCompile 'org.jmock:jmock-junit4:2.5.1'
		testCompile 'org.jmock:jmock-legacy:2.5.1'
		testCompile 'junit:junit:4.8.2'
	}
	
	shadowJar {
		baseName = rootProject.name + "-core"
		classifier = ''
		dependencies {
			exclude(dependency('org.simpleframework:simple-xml:2.7.1'))
		}
	}
	
	assemble.dependsOn shadowJar
}

project(":" + rootProject.name + "-gradle-plugin") {
	apply plugin: 'groovy'
	
	dependencies {
		compile project(":" + rootProject.name + "-core")
		compile gradleApi()
		compile localGroovy()
	
		testCompile 'org.jmock:jmock-junit4:2.5.1'
		testCompile 'org.jmock:jmock-legacy:2.5.1'
		testCompile 'junit:junit:4.8.2'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.4'
}